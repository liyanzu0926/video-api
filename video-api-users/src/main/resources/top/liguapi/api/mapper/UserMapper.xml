<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.liguapi.api.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="top.liguapi.api.entity.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="phone_linked" jdbcType="BIT" property="phoneLinked" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="wechat_linked" jdbcType="BIT" property="wechatLinked" />
    <result column="following_count" jdbcType="INTEGER" property="followingCount" />
    <result column="followers_count" jdbcType="INTEGER" property="followersCount" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, avatar, intro, phone, phone_linked, openid, wechat_linked, following_count, 
    followers_count, created_at, updated_at, deleted_at
  </sql>
  <select id="selectByExample" parameterType="top.liguapi.api.entity.pojo.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.liguapi.api.entity.pojo.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.liguapi.api.entity.pojo.User">
    insert into user (id, name, avatar, 
      intro, phone, phone_linked, 
      openid, wechat_linked, following_count, 
      followers_count, created_at, updated_at, 
      deleted_at)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{intro,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{phoneLinked,jdbcType=BIT}, 
      #{openid,jdbcType=VARCHAR}, #{wechatLinked,jdbcType=BIT}, #{followingCount,jdbcType=INTEGER}, 
      #{followersCount,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.liguapi.api.entity.pojo.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="phoneLinked != null">
        phone_linked,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="wechatLinked != null">
        wechat_linked,
      </if>
      <if test="followingCount != null">
        following_count,
      </if>
      <if test="followersCount != null">
        followers_count,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phoneLinked != null">
        #{phoneLinked,jdbcType=BIT},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="wechatLinked != null">
        #{wechatLinked,jdbcType=BIT},
      </if>
      <if test="followingCount != null">
        #{followingCount,jdbcType=INTEGER},
      </if>
      <if test="followersCount != null">
        #{followersCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.liguapi.api.entity.pojo.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneLinked != null">
        phone_linked = #{record.phoneLinked,jdbcType=BIT},
      </if>
      <if test="record.openid != null">
        openid = #{record.openid,jdbcType=VARCHAR},
      </if>
      <if test="record.wechatLinked != null">
        wechat_linked = #{record.wechatLinked,jdbcType=BIT},
      </if>
      <if test="record.followingCount != null">
        following_count = #{record.followingCount,jdbcType=INTEGER},
      </if>
      <if test="record.followersCount != null">
        followers_count = #{record.followersCount,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      phone_linked = #{record.phoneLinked,jdbcType=BIT},
      openid = #{record.openid,jdbcType=VARCHAR},
      wechat_linked = #{record.wechatLinked,jdbcType=BIT},
      following_count = #{record.followingCount,jdbcType=INTEGER},
      followers_count = #{record.followersCount,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.liguapi.api.entity.pojo.User">
    update user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="phoneLinked != null">
        phone_linked = #{phoneLinked,jdbcType=BIT},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="wechatLinked != null">
        wechat_linked = #{wechatLinked,jdbcType=BIT},
      </if>
      <if test="followingCount != null">
        following_count = #{followingCount,jdbcType=INTEGER},
      </if>
      <if test="followersCount != null">
        followers_count = #{followersCount,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.liguapi.api.entity.pojo.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      phone_linked = #{phoneLinked,jdbcType=BIT},
      openid = #{openid,jdbcType=VARCHAR},
      wechat_linked = #{wechatLinked,jdbcType=BIT},
      following_count = #{followingCount,jdbcType=INTEGER},
      followers_count = #{followersCount,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>